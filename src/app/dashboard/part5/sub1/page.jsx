'use client';

import React, { useEffect, useRef, useState } from 'react';
import Image from 'next/image'; // 添加Image组件
import { Box, Button, Grid, LinearProgress, MenuItem, Paper, Select, Typography } from '@mui/material';

const scene = ['金融风控', '电力潮流计算'];
const datasets = {
  金融风控: ['financial_data_test', 'atec_task3_seq'],
  电力潮流计算: ['electric_data_test', 'origin_power_data'],
};

const resultImages = {
  金融风控: {
    financial_data_test: '/financial_test.png',
    atec_task3_seq: '/financial_real.png',
  },
  电力潮流计算: {
    electric_data_test: '/electric_test.png',
    origin_power_data: '/electric_real.png',
  },
};

export default function Page() {
  const [selectedSecne, setSelectedScene] = useState(scene[0]);
  const [selectedDataset, setSelectedDataset] = useState(datasets[scene[0]][0]);
  const [terminalData, setTerminalData] = useState([]);
  const [isRunning, setIsRunning] = useState(false);
  const terminalRef = useRef(null); // 添加 ref 用于终端容器
  const [showResultImage, setShowResultImage] = useState(false); // 新增状态控制图片显示
  const [imageSrc, setImageSrc] = useState(''); // 新增状态存储图片路径

  const logDataMap = {
    金融风控: {
      financial_data_test: `✅ 数据读取完成！
开始数据清洗流程...
✅ 预处理已完成！
✅ 数据已保存到: ./cleaned_outputs/test_output/step1_preprocess.csv
+-----+------------------+------------------+------------------+------------------+
|index|payee_user_id_list|payee_pay_amt_list|payer_user_id_list|payer_pay_amt_list|
+-----+------------------+------------------+------------------+------------------+
|1    |2,,2              |1.0,2.0,1.0       |NULL              |1.0,2.0,3.0       |
|2    |3,3,4,            |1.0,2.0,3.0,4.0   |NULL              |NULL              |
|3    |NULL              |NULL              |NULL              |NULL              |
|-3   |NULL              |NULL              |NULL              |NULL              |
|4    |5                 |1.0               |NULL              |NULL              |
|5    |1,2               |NULL              |NULL              |1.0,2.0           |
|     |1,2               |NULL              |NULL              |1.0,2.0           |
+-----+------------------+------------------+------------------+------------------+

✅ 行过滤已完成！
✅ 数据已保存到: ./cleaned_outputs/test_output/step2_row_filter.csv
+-----+------------------+------------------+------------------+------------------+
|index|payee_user_id_list|payee_pay_amt_list|payer_user_id_list|payer_pay_amt_list|
+-----+------------------+------------------+------------------+------------------+
|1    |2,,2              |1.0,2.0,1.0       |NULL              |1.0,2.0,3.0       |
|2    |3,3,4,            |1.0,2.0,3.0,4.0   |NULL              |NULL              |
|3    |NULL              |NULL              |NULL              |NULL              |
|4    |5                 |1.0               |NULL              |NULL              |
|5    |1,2               |NULL              |NULL              |1.0,2.0           |
+-----+------------------+------------------+------------------+------------------+

✅ 列过滤已完成！
✅ 数据已保存到: ./cleaned_outputs/test_output/step3_column_filter.csv
+-----+------------------+------------------+
|index|payee_user_id_list|payee_pay_amt_list|
+-----+------------------+------------------+
|1    |2,,2              |1.0,2.0,1.0       |
|2    |3,3,4,            |1.0,2.0,3.0,4.0   |
|3    |NULL              |NULL              |
|4    |5                 |1.0               |
|5    |1,2               |NULL              |
+-----+------------------+------------------+

✅ 列分割已完成！
✅ 数据已保存到: ./cleaned_outputs/test_output/step4_split.csv
+-----+------------------+------------------+
|index|payee_user_id_list|payee_pay_amt_list|
+-----+------------------+------------------+
|1    |2,,2              |1.0,2.0,1.0       |
|2    |3,3,4,            |1.0,2.0,3.0,4.0   |
|3    |                  |                  |
|4    |5                 |1.0               |
|5    |1,2               |                  |
+-----+------------------+------------------+

✅ 缺失值填充已完成！
✅ 数据已保存到: ./cleaned_outputs/test_output/step5_fill.csv
+-----+------------------+------------------+
|index|payee_user_id_list|payee_pay_amt_list|
+-----+------------------+------------------+
|1    |2                 |1.0               |
|1    |0                 |2.0               |
|1    |2                 |1.0               |
|2    |3                 |1.0               |
|2    |3                 |2.0               |
|2    |4                 |3.0               |
|2    |0                 |4.0               |
|3    |0                 |0                 |
|4    |5                 |1.0               |
|5    |1                 |0                 |
+-----+------------------+------------------+
only showing top 10 rows

✅ 去重与边生成已完成！
✅ 数据已保存到: ./cleaned_outputs/test_output/step6_edges.csv
+---+---+---------+
|src|dst|edge_attr|
+---+---+---------+
|4  |5  |1.0      |
|5  |2  |0.0      |
|1  |0  |2.0      |
|2  |0  |4.0      |
|2  |4  |3.0      |
|1  |2  |1.0      |
|5  |1  |0        |
|2  |3  |2.0      |
|2  |3  |1.0      |
|3  |0  |0        |
+---+---+---------+

✅ 数据清洗完成，结果保存在 ./cleaned_outputs/test_output 目录下。`,
      atec_task3_seq: `✅ 数据读取完成！
开始数据清洗流程...
✅ 预处理已完成！
✅ 数据已保存到: ./cleaned_outputs/atec_output/step1_preprocess.csv
+-------+-------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------+------------------+------------------+
|index  |payee_user_id_list                                                                                           |payee_pay_amt_list                                                                 |payer_user_id_list|payer_pay_amt_list|
+-------+-------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------+------------------+------------------+
|417539 |NULL                                                                                                         |NULL                                                                               |3235358,3235358   |38000.0,380.0     |
|2553261|1654941,1654941,1074952,1074952                                                                              |1235000.0,12350.0,1500.0,15.0                                                      |NULL              |NULL              |
|323437 |NULL                                                                                                         |NULL                                                                               |NULL              |NULL              |
|3134339|4799303,4799303,2327616,2327616,2327616,2327616,2755544,2755544,4152472,4152472,4152472,4152472              |3300.0,33.0,700.0,7.0,600.0,6.0,2900.0,29.0,6500.0,65.0,1200.0,12.0                |NULL              |NULL              |
|1661447|NULL                                                                                                         |NULL                                                                               |NULL              |NULL              |
|2696313|2563408,2563408,2590772,2590772                                                                              |400.0,4.0,900.0,9.0                                                                |NULL              |NULL              |
|5298135|651614,651614,1442604,1442604,5178053,5178053,2943480,2943480,2160647,2160647,1068283,1068283,3990519,3990519|2.0,200.0,20.0,2000.0,1500.0,15.0,1870.0,18.7,2000.0,20.0,100.0,10000.0,1500.0,15.0|NULL              |NULL              |
|1474950|NULL                                                                                                         |NULL                                                                               |NULL              |NULL              |
|488360 |2890038,1766209,1766209                                                                                      |1377.0,5000.0,50.0                                                                 |NULL              |NULL              |
|2710538|1230189,1230189,1230189,1230189,5158977,5158977                                                              |800.0,8.0,800.0,8.0,32500.0,325.0                                                  |NULL              |NULL              |
+-------+-------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------+------------------+------------------+
only showing top 10 rows

✅ 行过滤已完成！
✅ 数据已保存到: ./cleaned_outputs/atec_output/step2_row_filter.csv
+-------+-------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------+------------------+------------------+
|index  |payee_user_id_list                                                                                           |payee_pay_amt_list                                                                 |payer_user_id_list|payer_pay_amt_list|
+-------+-------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------+------------------+------------------+
|417539 |NULL                                                                                                         |NULL                                                                               |3235358,3235358   |38000.0,380.0     |
|2553261|1654941,1654941,1074952,1074952                                                                              |1235000.0,12350.0,1500.0,15.0                                                      |NULL              |NULL              |
|323437 |NULL                                                                                                         |NULL                                                                               |NULL              |NULL              |
|3134339|4799303,4799303,2327616,2327616,2327616,2327616,2755544,2755544,4152472,4152472,4152472,4152472              |3300.0,33.0,700.0,7.0,600.0,6.0,2900.0,29.0,6500.0,65.0,1200.0,12.0                |NULL              |NULL              |
|1661447|NULL                                                                                                         |NULL                                                                               |NULL              |NULL              |
|2696313|2563408,2563408,2590772,2590772                                                                              |400.0,4.0,900.0,9.0                                                                |NULL              |NULL              |
|5298135|651614,651614,1442604,1442604,5178053,5178053,2943480,2943480,2160647,2160647,1068283,1068283,3990519,3990519|2.0,200.0,20.0,2000.0,1500.0,15.0,1870.0,18.7,2000.0,20.0,100.0,10000.0,1500.0,15.0|NULL              |NULL              |
|1474950|NULL                                                                                                         |NULL                                                                               |NULL              |NULL              |
|488360 |2890038,1766209,1766209                                                                                      |1377.0,5000.0,50.0                                                                 |NULL              |NULL              |
|2710538|1230189,1230189,1230189,1230189,5158977,5158977                                                              |800.0,8.0,800.0,8.0,32500.0,325.0                                                  |NULL              |NULL              |
+-------+-------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------+------------------+------------------+
only showing top 10 rows

✅ 列过滤已完成！
✅ 数据已保存到: ./cleaned_outputs/atec_output/step3_column_filter.csv
+-------+-------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------+
|index  |payee_user_id_list                                                                                           |payee_pay_amt_list                                                                 |
+-------+-------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------+
|417539 |NULL                                                                                                         |NULL                                                                               |
|2553261|1654941,1654941,1074952,1074952                                                                              |1235000.0,12350.0,1500.0,15.0                                                      |
|323437 |NULL                                                                                                         |NULL                                                                               |
|3134339|4799303,4799303,2327616,2327616,2327616,2327616,2755544,2755544,4152472,4152472,4152472,4152472              |3300.0,33.0,700.0,7.0,600.0,6.0,2900.0,29.0,6500.0,65.0,1200.0,12.0                |
|1661447|NULL                                                                                                         |NULL                                                                               |
|2696313|2563408,2563408,2590772,2590772                                                                              |400.0,4.0,900.0,9.0                                                                |
|5298135|651614,651614,1442604,1442604,5178053,5178053,2943480,2943480,2160647,2160647,1068283,1068283,3990519,3990519|2.0,200.0,20.0,2000.0,1500.0,15.0,1870.0,18.7,2000.0,20.0,100.0,10000.0,1500.0,15.0|
|1474950|NULL                                                                                                         |NULL                                                                               |
|488360 |2890038,1766209,1766209                                                                                      |1377.0,5000.0,50.0                                                                 |
|2710538|1230189,1230189,1230189,1230189,5158977,5158977                                                              |800.0,8.0,800.0,8.0,32500.0,325.0                                                  |
+-------+-------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------+
only showing top 10 rows

✅ 列分割已完成！
✅ 数据已保存到: ./cleaned_outputs/atec_output/step4_split.csv
+-------+-------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------+
|index  |payee_user_id_list                                                                                           |payee_pay_amt_list                                                                 |
+-------+-------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------+
|417539 |                                                                                                             |                                                                                   |
|2553261|1654941,1654941,1074952,1074952                                                                              |1235000.0,12350.0,1500.0,15.0                                                      |
|323437 |                                                                                                             |                                                                                   |
|3134339|4799303,4799303,2327616,2327616,2327616,2327616,2755544,2755544,4152472,4152472,4152472,4152472              |3300.0,33.0,700.0,7.0,600.0,6.0,2900.0,29.0,6500.0,65.0,1200.0,12.0                |
|1661447|                                                                                                             |                                                                                   |
|2696313|2563408,2563408,2590772,2590772                                                                              |400.0,4.0,900.0,9.0                                                                |
|5298135|651614,651614,1442604,1442604,5178053,5178053,2943480,2943480,2160647,2160647,1068283,1068283,3990519,3990519|2.0,200.0,20.0,2000.0,1500.0,15.0,1870.0,18.7,2000.0,20.0,100.0,10000.0,1500.0,15.0|
|1474950|                                                                                                             |                                                                                   |
|488360 |2890038,1766209,1766209                                                                                      |1377.0,5000.0,50.0                                                                 |
|2710538|1230189,1230189,1230189,1230189,5158977,5158977                                                              |800.0,8.0,800.0,8.0,32500.0,325.0                                                  |
+-------+-------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------+
only showing top 10 rows

✅ 缺失值填充已完成！
✅ 数据已保存到: ./cleaned_outputs/atec_output/step5_fill.csv
+-------+------------------+------------------+
|index  |payee_user_id_list|payee_pay_amt_list|
+-------+------------------+------------------+
|417539 |0                 |0                 |
|2553261|1654941           |1235000.0         |
|2553261|1654941           |12350.0           |
|2553261|1074952           |1500.0            |
|2553261|1074952           |15.0              |
|323437 |0                 |0                 |
|3134339|4799303           |3300.0            |
|3134339|4799303           |33.0              |
|3134339|2327616           |700.0             |
|3134339|2327616           |7.0               |
+-------+------------------+------------------+
only showing top 10 rows

✅ 去重与边生成已完成！
✅ 数据已保存到: ./cleaned_outputs/atec_output/step6_edges.csv
+-------+-------+---------+
|src    |dst    |edge_attr|
+-------+-------+---------+
|5298135|1068283|100.0    |
|662568 |3369534|19.0     |
|4453447|1071333|25000.0  |
|3483087|0      |0        |
|3518198|0      |0        |
|172724 |2383656|4800.0   |
|3321994|0      |0        |
|4334451|493616 |2287.0   |
|4917122|2739018|36000.0  |
|799914 |4318298|900.0    |
+-------+-------+---------+
only showing top 10 rows

✅ 数据清洗完成，结果保存在 ./cleaned_outputs/atec_output 目录下。`,
    },
    电力潮流计算: {
      electric_data_test: `正在加载数据文件: electric_data_test.csv ...
✅ 数据加载成功，共 10 行 8 列。

📊 显示前10行和前10列的中间结果：
      0     1     2     3    4     5  6     7
0   NaN   NaN   1.0   2.0  NaN   3.0  ?   4.0
1   5.0   NaN   6.0   7.0  NaN   8.0  ?   9.0
2  10.0  11.0   NaN  12.0  NaN  13.0  -  14.0
3  15.0   NaN  16.0  17.0  NaN  18.0  ?  19.0
4   NaN   NaN   1.0   2.0  NaN   3.0  ?   4.0
5   5.0   NaN   6.0   7.0  NaN   8.0  ?   9.0
6  10.0  11.0   NaN  12.0  NaN  13.0  -  14.0
7  15.0   NaN  16.0  17.0  NaN  18.0  ?  19.0
8   5.0   NaN   6.0   7.0  NaN   8.0  ?   9.0
9  10.0  11.0   NaN  12.0  NaN  13.0  -  14.0

🔍 正在检测非数值字符 ...
❌ 共检测到 10 个非数值字符
✅ 所有非数值字符已替换为缺失值（NaN）

📊 显示前10行和前10列的中间结果：
      0     1     2     3    4     5    6     7
0   NaN   NaN   1.0   2.0  NaN   3.0  NaN   4.0
1   5.0   NaN   6.0   7.0  NaN   8.0  NaN   9.0
2  10.0  11.0   NaN  12.0  NaN  13.0  NaN  14.0
3  15.0   NaN  16.0  17.0  NaN  18.0  NaN  19.0
4   NaN   NaN   1.0   2.0  NaN   3.0  NaN   4.0
5   5.0   NaN   6.0   7.0  NaN   8.0  NaN   9.0
6  10.0  11.0   NaN  12.0  NaN  13.0  NaN  14.0
7  15.0   NaN  16.0  17.0  NaN  18.0  NaN  19.0
8   5.0   NaN   6.0   7.0  NaN   8.0  NaN   9.0
9  10.0  11.0   NaN  12.0  NaN  13.0  NaN  14.0

🧮 正在填充缺失值 ...
✅ 缺失值填充完成

📊 显示前10行和前10列的中间结果：
      0     1     2     3     4     5     6     7
0   2.5   2.5   1.0   2.0   2.5   3.0   2.5   4.0
1   5.0   7.0   6.0   7.0   7.0   8.0   7.0   9.0
2  10.0  11.0  12.0  12.0  12.0  13.0  12.0  14.0
3  15.0  17.0  16.0  17.0  17.0  18.0  17.0  19.0
4   2.5   2.5   1.0   2.0   2.5   3.0   2.5   4.0
5   5.0   7.0   6.0   7.0   7.0   8.0   7.0   9.0
6  10.0  11.0  12.0  12.0  12.0  13.0  12.0  14.0
7  15.0  17.0  16.0  17.0  17.0  18.0  17.0  19.0
8   5.0   7.0   6.0   7.0   7.0   8.0   7.0   9.0
9  10.0  11.0  12.0  12.0  12.0  13.0  12.0  14.0

📦 正在拆分数据并保存文件 ...
✅ 已保存：test_output_1.csv
✅ 已保存：test_output_2.csv
✅ 已保存：test_output_3.csv
✅ 已保存：test_output_4.csv

🎉 数据清洗完成，所有文件已保存。`,
      origin_power_data: `📂 正在加载数据文件: origin_power_data.csv ...
✅ 数据加载成功，共 82 行 380000 列。

📊 显示前10行和前10列的中间结果：
                   0                  1                   2                   3  ...                   6                  7                   8                   9
0                NaN                NaN  278.87474969877167  191.84983524609865  ...  236.48578937798737  221.2750190116772  193.18654728171063   133.7900481019683
1  639.6988925199132                NaN                 NaN                 NaN  ...   855.9671178537844  808.2594185905909   682.2662171463624   733.7093516658699
2  551.6051546516787   607.782550074623   717.2365233650821   642.7370214187645  ...   713.8176012863438  584.1189881937081   362.3535656924473   902.9594859403256
3  503.5658197083365  370.3604257799704    716.518019338177   428.0975678765016  ...   327.7676116387195                NaN   580.4377931544295   742.9937107498613
4  479.1091805266632  577.4450249346523   272.3121756033915   737.9663368016552  ...   467.7604801503672  581.5454873853879   747.0899243413361   439.0462605906253
5  754.6799554761429  772.6789146574338   606.1393505535102  447.25240338754594  ...   615.3212173909253  938.2082734032456   378.5831623481761  350.19793756736004
6  525.1126614969386  646.7761140202246   622.2400185724889   732.2771553243566  ...   619.4694344362817    723.57113332478   838.1972316803717   707.0080292781206
7                NaN  431.0006622476096    804.378889332633    493.885033490396  ...                 NaN  346.1908152208512                 NaN   750.7980083499328
8                NaN  996.0660763053512    749.859459735409                 NaN  ...   894.3254994805178                NaN  1127.5930359985086   613.7721756488237
9   784.910800796797  524.8560675388169   879.4242357722467   613.3418255316344  ...  1362.7024161758225                NaN   1086.358904413736   778.5624591568103

[10 rows x 10 columns]

🔍 正在检测非数值字符 ...
❌ 共检测到 2 个非数值字符
✅ 所有非数值字符已替换为缺失值（NaN）

📊 显示前10行和前10列的中间结果：
                   0                  1                   2                   3  ...                   6                  7                   8                   9
0                NaN                NaN  278.87474969877167  191.84983524609865  ...  236.48578937798737  221.2750190116772  193.18654728171063   133.7900481019683
1  639.6988925199132                NaN                 NaN                 NaN  ...   855.9671178537844  808.2594185905909   682.2662171463624   733.7093516658699
2  551.6051546516787   607.782550074623   717.2365233650821   642.7370214187645  ...   713.8176012863438  584.1189881937081   362.3535656924473   902.9594859403256
3  503.5658197083365  370.3604257799704    716.518019338177   428.0975678765016  ...   327.7676116387195                NaN   580.4377931544295   742.9937107498613
4  479.1091805266632  577.4450249346523   272.3121756033915   737.9663368016552  ...   467.7604801503672  581.5454873853879   747.0899243413361   439.0462605906253
5  754.6799554761429  772.6789146574338   606.1393505535102  447.25240338754594  ...   615.3212173909253  938.2082734032456   378.5831623481761  350.19793756736004
6  525.1126614969386  646.7761140202246   622.2400185724889   732.2771553243566  ...   619.4694344362817    723.57113332478   838.1972316803717   707.0080292781206
7                NaN  431.0006622476096    804.378889332633    493.885033490396  ...                 NaN  346.1908152208512                 NaN   750.7980083499328
8                NaN  996.0660763053512    749.859459735409                 NaN  ...   894.3254994805178                NaN  1127.5930359985086   613.7721756488237
9   784.910800796797  524.8560675388169   879.4242357722467   613.3418255316344  ...  1362.7024161758225                NaN   1086.358904413736   778.5624591568103

[10 rows x 10 columns]

🧮 正在填充缺失值 ...
✅ 缺失值填充完成

📊 显示前10行和前10列的中间结果：
            0           1           2           3           4            5            6            7            8           9
0  250.336000  250.336000  278.874750  191.849835  250.336000   224.778863   236.485789   221.275019   193.186547  133.790048
1  639.698893  678.710000  678.710000  678.710000  393.589970   675.233785   855.967118   808.259419   682.266217  733.709352
2  551.605155  607.782550  717.236523  642.737021  855.431256   793.439499   713.817601   584.118988   362.353566  902.959486
3  503.565820  370.360426  716.518019  428.097568  617.704659   844.989541   327.767612   632.787000   580.437793  742.993711
4  479.109181  577.445025  272.312176  737.966337  287.183615   560.750822   467.760480   581.545487   747.089924  439.046261
5  754.679955  772.678915  606.139351  447.252403  672.136614   649.826645   615.321217   938.208273   378.583162  350.197938
6  525.112661  646.776114  622.240019  732.277155  561.218000   386.103371   619.469434   723.571133   838.197232  707.008029
7  540.627000  431.000662  804.378889  493.885033  504.927120   531.629751   540.627000   346.190815   540.627000  750.798008
8  831.491000  996.066076  749.859460  831.491000  988.487209   541.981275   894.325499   831.491000  1127.593036  613.772176
9  784.910801  524.856068  879.424236  613.341826  929.714809  1010.346314  1362.702416  1001.844000  1086.358904  778.562459
请输入输出文件前缀（默认 output）：output

📦 正在拆分数据并保存文件 ...
✅ 已保存：output_1.csv
✅ 已保存：output_2.csv
✅ 已保存：output_3.csv
✅ 已保存：output_4.csv

🎉 数据清洗完成，所有文件已保存。`,
    },
  };

  const streamLogData = async () => {
    const data = logDataMap[selectedSecne][selectedDataset];
    const logLines = data.split('\n');
    let currentIndex = 0;
    await new Promise((resolve) => setTimeout(resolve, 500));

    while (currentIndex < logLines.length) {
      const nextChunk = logLines.slice(currentIndex, currentIndex + 5);
      setTerminalData((prev) => [...prev, ...nextChunk]);
      currentIndex += 5;
      await new Promise((resolve) => setTimeout(resolve, 500));
    }
  };

  const runProcess = async () => {
    setIsRunning(true);
    setShowResultImage(false);
    setTerminalData([]);

    try {
      await streamLogData();
      setImageSrc(resultImages[selectedSecne][selectedDataset]);
      setShowResultImage(true);
    } catch (error) {
      setTerminalData((prev) => [...prev, '❌ 运行失败: ' + error]);
    } finally {
      setIsRunning(false);
    }
  };

  // 添加 useEffect 监听 terminalData 变化并滚动到底部
  useEffect(() => {
    if (terminalRef.current) {
      terminalRef.current.scrollTop = terminalRef.current.scrollHeight;
    }
  }, [terminalData]);

  return (
    <Box sx={{ p: 3, backgroundColor: '#f5f6fa' }}>
      <Grid item xs={12} sx={{ mb: 3 }}>
        <Paper
          elevation={0}
          sx={{
            p: 3,
            borderRadius: 2,
            backgroundColor: '#f0f4f8',
            border: '1px solid #e0e0e0',
          }}
        >
          <Typography
            variant="body1"
            component="div"
            sx={{
              lineHeight: 1.6,
              color: '#2d3436',
              fontSize: '0.95rem',
              '& .red-bold': {
                fontWeight: 600,
                color: '#ff4444',
                display: 'inline',
                padding: '0 2px',
              },
              '& strong': {
                fontWeight: 600,
              },
            }}
          >
            <strong>考核指标</strong>
            <Box component="span" display="block">
              针对图计算场景研发图应用相关辅助工具
            </Box>

            <strong>中期指标：</strong>
            <Box component="span" display="block">
              指标5.1：研发<span className="red-bold">1～3</span>个领域专用的图数据清洗工具
            </Box>

            <strong>中期指标完成情况：</strong>
            <Box component="span" display="block">
              ① 完成面向金融风控场景的图数据自动清洗工具
            </Box>
            <Box component="span" display="block">
              ② 完成面向电力潮流分析场景的图数据自动清洗工具
            </Box>
            <Box component="span" display="block">
              ③ 实现面向金融图数据的仿真生成工具，用于构建基于金融领域的生成图
            </Box>
            <strong>完成时指标：</strong>
            <Box component="span" display="block">
              指标5.1：研发1～3个领域专用的构图工具
            </Box>
            <strong>考核方式：</strong>
            <Box component="span" display="block">
              <Box>
                本测试通过编写python自动化脚本finalcial_daat_clean.py自动运行每一步清洗流程并验证结果是否匹配预期值。
              </Box>
              <Box> 支持典型电力数据清洗流程，包括非数值检测与替换、缺失值填充、数据拆分与保存等操作。</Box>
              <Box> 编译部署金融图仿真生成工具，生成数据并构件图，检查构建的图及其规模。</Box>
              运行环境依托主流处理器Intel(R) Xeon(R) Gold 6148 CPU @ 2.40GHz。
            </Box>

            <strong>数据集来源：</strong>
            <Box component="span" display="block">
              1.前沿科技探索社区（Adavanced Technology Exploration Community,
              ATEC）提供的农村金融风险预测数据集，采用atec_task3_seq.csv数据集。
            </Box>
            <Box component="span" display="block">
              2.采用南瑞提供的电力领域数据集origin_power_data.csv。
            </Box>
          </Typography>
        </Paper>
      </Grid>
      <Grid container spacing={3}>
        {/* 控制面板 */}
        <Grid item xs={12} md={4}>
          <Paper elevation={3} sx={{ p: 2, borderRadius: 3 }}>
            <Typography
              variant="h6"
              sx={{
                fontWeight: 700,
                mb: 2,
                color: 'second.main',
                borderBottom: '2px solid',
                borderColor: 'second.main',
                pb: 1,
              }}
            >
              运行选项
            </Typography>

            <Grid container spacing={2}>
              <Grid item xs={12}>
                <Typography
                  variant="h6"
                  sx={{
                    fontWeight: 550,
                    fontSize: '16px',
                    mb: 1,
                  }}
                >
                  场景选择
                </Typography>
                <Select
                  fullWidth
                  value={selectedSecne}
                  onChange={(e) => {
                    setSelectedScene(e.target.value);
                    setSelectedDataset(datasets[e.target.value][0]);
                  }}
                  disabled={isRunning}
                >
                  {scene.map((scene) => (
                    <MenuItem key={scene} value={scene} sx={{ py: 1 }}>
                      <Typography variant="body1" fontWeight="500">
                        {scene}
                      </Typography>
                    </MenuItem>
                  ))}
                </Select>
              </Grid>

              <Grid item xs={12}>
                <Typography
                  variant="h6"
                  sx={{
                    fontWeight: 550,
                    fontSize: '16px',
                    mb: 1,
                  }}
                >
                  选择数据集
                </Typography>
                <Select
                  value={selectedDataset}
                  onChange={(e) => setSelectedDataset(e.target.value)}
                  disabled={isRunning}
                  fullWidth
                >
                  {datasets[selectedSecne].map((dataset) => (
                    <MenuItem key={dataset} value={dataset} sx={{ py: 1 }}>
                      <Typography variant="body1">{dataset}</Typography>
                    </MenuItem>
                  ))}
                </Select>
              </Grid>

              <Grid item xs={12}>
                <Button
                  fullWidth
                  variant="contained"
                  color="success"
                  onClick={runProcess}
                  sx={{ py: 1.5 }}
                  disabled={isRunning}
                >
                  {isRunning ? '运行中...' : '开始运行'}
                </Button>
              </Grid>
            </Grid>

            {isRunning && (
              <Box sx={{ mt: 2 }}>
                <LinearProgress color="success" />
              </Box>
            )}
          </Paper>
        </Grid>
        <Grid item xs={12} md={4}>
          <Paper elevation={3} sx={{ p: 2, borderRadius: 3 }}>
            <Typography
              variant="h6"
              sx={{
                fontWeight: 700,
                mb: 2,
                color: 'secondary.main',
                borderBottom: '2px solid',
                borderColor: 'secondary.main',
                pb: 1,
              }}
            >
              {'数据清洗工具详情'}
            </Typography>
            <Box>
              <Typography variant="body2" color="text.secondary" paragraph>
                <strong>面向金融风控场景数据清洗工具详情：</strong>
                本工具提供高效自动化清洗流程，涵盖预处理、行过滤、列过滤、列分割、填充缺失值及去重生成边数据等核心功能。工具确保数据完整性和准确性，符合标准图数据格式，满足金融风控应用需求。
              </Typography>
              <Typography variant="body2" color="text.secondary">
                <strong>面向电力潮流分析场景数据清洗工具详情：</strong>
                本工具支持非数值检测与替换、缺失值填充、数据拆分等操作。工具确保数据清洗准确、满足电力数据分析需求。
              </Typography>
            </Box>
          </Paper>
        </Grid>
        {/* 数据集信息卡片 */}
        <Grid item xs={12} md={4}>
          <Paper elevation={3} sx={{ p: 2, borderRadius: 3 }}>
            <Typography
              variant="h6"
              sx={{
                fontWeight: 700,
                mb: 2,
                color: 'secondary.main',
                borderBottom: '2px solid',
                borderColor: 'secondary.main',
                pb: 1,
              }}
            >
              {'数据集信息'}
            </Typography>
            <Box>
              <Typography variant="body2" color="text.secondary" paragraph>
                <strong>金融风控场景数据集（atec_task3_seq.csv）</strong>：313073条记录，5个字段
              </Typography>
              <Typography variant="body2" color="text.secondary">
                <strong>电力潮流分析场景数据集（origin_power_data.csv）：</strong>82行，380000列
              </Typography>
            </Box>
          </Paper>
        </Grid>
        <Grid item xs={12} md={6}>
          <Paper
            elevation={3}
            sx={{
              p: 2,
              borderRadius: 3,
            }}
          >
            <Typography
              variant="h6"
              sx={{
                fontWeight: 700,
                mb: 2,
                color: 'second.main',
              }}
            >
              运行日志
            </Typography>

            <Box
              ref={terminalRef}
              sx={{
                height: '85%',
                overflow: 'auto',
                fontFamily: 'monospace',
                fontSize: '0.8rem',
                backgroundColor: '#000',
                borderRadius: 2,
                height: 400,
                p: 1.5,
                '& > div': {
                  color: '#4caf50',
                  lineHeight: 1.6,
                  borderBottom: '1px solid rgba(255,255,255,0.1)',
                  py: 0.5,
                },
              }}
            >
              {terminalData.map((line, index) => (
                <div key={index}>{`> ${line}`}</div>
              ))}
            </Box>
          </Paper>
        </Grid>

        {/* 分析结果 */}
        <Grid item xs={12} md={6}>
          <Paper
            elevation={3}
            sx={{
              p: 2,
              borderRadius: 3,
              position: 'relative',
            }}
          >
            <Typography
              variant="h6"
              sx={{
                fontWeight: 700,
                mb: 2,
                color: 'second.main',
              }}
            >
              结果展示
            </Typography>

            <Box
              sx={{
                height: '400px', // 减去标题高度
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                overflow: 'hidden',
              }}
            >
              {showResultImage ? (
                <Image src={imageSrc} alt="处理结果示意图" width={600} height={350} />
              ) : (
                <Box
                  sx={{
                    height: '100%',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    color: 'text.secondary',
                  }}
                >
                  <Typography variant="h6">{isRunning ? '数据生成中...' : '等待运行结果'}</Typography>
                </Box>
              )}
            </Box>
          </Paper>
        </Grid>
      </Grid>
    </Box>
  );
}
